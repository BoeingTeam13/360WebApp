<%- include('partials/header') -%>

<h1>This is the live maps page!</h1>



<div id="mapid" style="height: 500px; width: 500px; position: absolute; top: 26%; left: 30%;"></div>
<div id="coord"></div>
<button type="button" onclick="showPosition();">Show Position</button>

<!-- <script type="text/javascript" charset="utf-8">
    let map, infoWindow;

    function initMap() {

        map = new google.maps.Map(document.getElementById("map"), {
            center: {
                lat: -34.397,
                lng: 150.644
            },
            zoom: 6,
            mapType: google.maps.MapTypeId.ROADMAP,
            disableDefaultUI: true,
            mapTypeControl: true,
            zoomControl: true,
            mapTypeControlOptions: {
                style: google.maps.MapTypeControlStyle.DROPDOWN_MENU,
                position: google.maps.ControlPosition.TOP_RIGHT
            },
            zoomControlOptions: {
                position: google.maps.ControlPosition.TOP_RIGHT
            }
        });

        //code for radius circle
        earthRadii = {
        mi: 3963.1676,
        km: 6378.1,
        ft: 20925524.9,
        mt: 6378100,
        "in": 251106299,
        yd: 6975174.98,
        fa: 3487587.49,
        na: 3443.89849,
        ch: 317053.408,
        rd: 1268213.63,
        fr: 31705.3408
        };
        polygonDestructionHandler = function() {
        return this.setMap(null);
        };
        clearMarkers = function() {
        var i, len, m;
        for (i = 0, len = markers.length; i < len; i++) {
            m = markers[i];
            m.setMap(null);
        }
        return markers = [];
        };
        circleDrawHandler = function(e) {
        var circle, radius, select, unitKey;
        radius = 500; //meters
        circle = new google.maps.Circle({
            center: e.latLng,
            clickable: true,
            draggable: false,
            editable: false,
            fillColor: '#004de8',
            fillOpacity: 0.27,
            map: map,
            radius: radius,
            strokeColor: '#004de8',
            strokeOpacity: 0.62,
            strokeWeight: 1
        });
        console.log(radius)
        google.maps.event.addListener(circle, 'rightclick', polygonDestructionHandler);
        console.log('clicked!')
        return google.maps.event.addListener(circle, 'click', circleDrawHandler);
        };
        google.maps.event.addListener(map, 'click', circleDrawHandler);
        //end of radius circle code
    
        var locations = [
            ['Hemmingson Center', 47.667100, -117.399600],
            ['McCarthy Center', 47.665300, -117.399100],
            ['Zag Shop', 47.667700,	-117.397700],
            ['Foley Library', 47.666500, -117.400900],
            ['College Hall', 47.668100, -117.402500],
            ['Herak', 47.666600, -117.402200],
            ['Jepsen', 47.667200, -117.405000],
            ['Riverfront Pavilion', 47.662600, -117.419000],
            ['Numerica Skate Ribbon', 47.660700, -117.422500],
            ['Forza Coffee', 47.667100, -117.396200]
        ];

        var marker, i;
        var infowindow = new google.maps.InfoWindow();

        for (i = 0; i < locations.length; i++) {  
            marker = new google.maps.Marker({
            position: new google.maps.LatLng(locations[i][1], locations[i][2]),
            map: map
        });
        google.maps.event.addListener(marker, 'click', (function(marker, i) {
            return function() {
            infowindow.setContent(locations[i][0]);
            infowindow.open(map, marker);
            }
        })(marker, i));
        }


        infoWindow = new google.maps.InfoWindow();
        const locationButton = document.createElement("button");
        locationButton.textContent = "Pan to Current Location";
        locationButton.classList.add("custom-map-control-button");
        map.controls[google.maps.ControlPosition.TOP_CENTER].push(locationButton);
        locationButton.addEventListener("click", () => {
            // Try HTML5 geolocation.
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(
                    (position) => {
                        const pos = {
                            lat: position.coords.latitude,
                            lng: position.coords.longitude,
                        };
                        infoWindow.setPosition(pos);
                        infoWindow.setContent("Location found.");
                        infoWindow.open(map);
                        map.setCenter(pos);
                    },
                    () => {
                        handleLocationError(true, infoWindow, map.getCenter());
                    }
                );
            } else {
                // Browser doesn't support Geolocation
                handleLocationError(false, infoWindow, map.getCenter());
            }
        });
    }

    function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(
            browserHasGeolocation ?
            "Error: The Geolocation service failed." :
            "Error: Your browser doesn't support geolocation."
        );
        infoWindow.open(map);
    }
</script> -->

<script>
    var mymap = L.map('mapid').setView([47.6670, -117.4014], 11);
    var marker = L.marker([0, 0]).addTo(mymap);
    const attribution = '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors';
    const tileUrl = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';
    const tiles = L.tileLayer(tileUrl, { attribution });
    tiles.addTo(mymap);

    var locations = [
            ['Hemmingson Center', 47.667100, -117.399600],
            ['McCarthy Center', 47.665300, -117.399100],
            ['Zag Shop', 47.667700,	-117.397700],
            ['Foley Library', 47.666500, -117.400900],
            ['College Hall', 47.668100, -117.402500],
            ['Herak', 47.666600, -117.402200],
            ['Jepsen', 47.667200, -117.405000],
            ['Riverfront Pavilion', 47.662600, -117.419000],
            ['Numerica Skate Ribbon', 47.660700, -117.422500],
            ['Forza Coffee', 47.667100, -117.396200]
        ];

    var x = document.getElementById("coord");
    for (i = 0; i < locations.length; i++) {  
        marker = L.marker([locations[i][1], locations[i][2]]).bindPopup(locations[i][0]).addTo(mymap);
    }

    function showPosition() {
        if(navigator.geolocation){
            navigator.geolocation.getCurrentPosition(drawRadius);
        }else{
            x.innerHTML = "Not able to get current location"
        }
    }
    var circle;
    function drawRadius(position){
        if (mymap.hasLayer(circle)) {
            circle.remove();
        }
        circle = L.circle([position.coords.latitude, position.coords.longitude], {
            color: 'red',
            radius: 1609.34
        }).addTo(mymap);
    }
    var staticCircle = L.circle([47.6670, -117.4014], {
        color: 'red',
        radius: 804
    }).addTo(mymap);
</script>


<%- include('partials/footer') -%>